<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>partyspy的技术博客</title>
  <subtitle>开发随记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-07-04T09:50:50.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>partyspy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Objective-C Runtime(一) 初探</title>
    <link href="http://yoursite.com/2016/07/02/Objective-C%20Rumtime(%E4%B8%80)-%20%E5%88%9D%E6%8E%A2/"/>
    <id>http://yoursite.com/2016/07/02/Objective-C Rumtime(一)- 初探/</id>
    <published>2016-07-02T07:22:29.000Z</published>
    <updated>2016-07-04T09:50:50.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Objective-C 编译器与运行时系统支撑着OC程序的运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Objective-C程序在三个层面上与runtime系统交互：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Objective-C源代码：编译器把OC代码类、方法、成员变量等信息转化为支持语言动态特性的数据结构与函数。比如消息传递机制中的核心函数&lt;code&gt;objc_msgSend&lt;/code&gt;，即由OC代码的消息传递语句转换而来。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NSObject提供了一系列的自省(Introspection)方法，也是运行时的一部分。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Runtime函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;消息传递机制&quot;&gt;&lt;a href=&quot;#消息传递机制&quot; class=&quot;headerlink&quot; title=&quot;消息传递机制&quot;&gt;&lt;/a&gt;消息传递机制&lt;/h2&gt;&lt;p&gt;在Objective-C里，消息(message)是到运行时才绑定到方法实现的.&lt;br&gt;意思就是说, 像&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[receiver message];&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这样一条语句, 编译器会把他转换为&lt;/p&gt;
&lt;p&gt;&lt;code&gt;objc_msgSend(receiver, selector);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这样第一个C语言的函数调用, 参数分别是消息接受者(对象), 消息对应的方法名称(选择子), 若改方法带参数, 则为&lt;/p&gt;
&lt;p&gt;&lt;code&gt;objc_msgSend(receiver, selector, arg1, arg2, ...)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;该函数的动态绑定过程是这样的:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它首先沿着类的继承体系去寻找选择子对应的方法实现. &lt;/li&gt;
&lt;li&gt;找到后调用具体的方法实现, 并把对象指针以及各参数传递给该方法, 随后调用它. &lt;/li&gt;
&lt;li&gt;最后返回该方法的返回值.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它的函数原型：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;id objc_msgSend(id self, SEL cmd, ...)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;回头看动态绑定过程的第一步.&lt;br&gt;Objective-C里, 每个类里都维护着一张表格(&lt;em&gt;dispatch table&lt;/em&gt;), 其中的指针正是指向该类下所定义的方法实现, 而方法的选择子(&lt;em&gt;selector&lt;/em&gt;)作为查表用的”键”.&lt;br&gt;每个类里除了该表之外, 还拥有一个指向其父类的指针.&lt;/p&gt;
&lt;p&gt;这些类与对象的结构是这样的:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Art/messaging1.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;对象实例里有一个&lt;code&gt;isa&lt;/code&gt;指针, 指向它的类对象.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;objc_msgSend&lt;/code&gt;函数依赖着上述的继承体系去查找并调用恰当的方法.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为了加速方法的查找, 每个类里除了自身定义的方法列表外, 还维护这一张快速映射表作为缓存. 多次对它查找同一selector将不再向上追溯查找, 而直接查找本身的缓存并返回对应的方法实现.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;刚才提到要调用的方法实现, 每个OC对象的方法都可视为一个C函数, 其原型如下: &lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;return_type&amp;gt; Class_selector(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, SEL _cmd, ...)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实际函数名可能跟上面的不一样. 但注意的是该函数里是包括了&lt;code&gt;self&lt;/code&gt;和&lt;code&gt;_cmd&lt;/code&gt;两个隐含参数的. 所谓”隐含”, 是指在开发人员编写的方法代码里, 是不存在这两个参数, 但我们都可以通过这两个变量名去访问.&lt;/p&gt;
&lt;h2 id=&quot;消息转发机制&quot;&gt;&lt;a href=&quot;#消息转发机制&quot; class=&quot;headerlink&quot; title=&quot;消息转发机制&quot;&gt;&lt;/a&gt;消息转发机制&lt;/h2&gt;&lt;p&gt;在上一节消息&lt;strong&gt;传递&lt;/strong&gt;机制中, 对象接收到一个消息后, 去搜寻其对应方法实现的函数地址. 若搜寻不到, 并不马上抛出异常, 而是再给接受者一次机会, 进入&lt;strong&gt;消息转发&lt;/strong&gt;机制.&lt;/p&gt;
&lt;p&gt;消息转发分为两大阶段. 第一阶段先征询接受者所属的类, 看其是否能动态添加方法, 以处理当前这个未知的选择子(unknown selector), 这叫做&lt;strong&gt;动态方法解析&lt;/strong&gt;(&lt;em&gt;Dynamic Method Resolution&lt;/em&gt;); 第二阶段则为”&lt;strong&gt;完整的消息转发机制”&lt;/strong&gt;(&lt;em&gt;full forwarding mechanism&lt;/em&gt;).&lt;/p&gt;
&lt;h3 id=&quot;动态方法解析&quot;&gt;&lt;a href=&quot;#动态方法解析&quot; class=&quot;headerlink&quot; title=&quot;动态方法解析&quot;&gt;&lt;/a&gt;动态方法解析&lt;/h3&gt;&lt;p&gt;对象在收到无法解读的消息后, &lt;strong&gt;首先&lt;/strong&gt;将调用其所属类的下列类方法:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)resolveInstanceMethod:(SEL)selector&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;顾名思义, 该方法作用为解析实例方法, 相应地也有个类似的方法, 为解析类方法所用: &lt;code&gt;resolveClassMethod&lt;/code&gt;.&lt;br&gt;此方法在&lt;code&gt;respondsToSelector:&lt;/code&gt; 或&lt;code&gt;instancesRespondToSelector:&lt;/code&gt;被调用后返回前, 也有一次机会为自己动态添加一个方法的实现.&lt;/p&gt;
&lt;p&gt;动态方法解析常用来实现 @dynamic 属性.&lt;/p&gt;
&lt;p&gt;下面看一个完整的例子演示动态方法解析.&lt;/p&gt;
&lt;p&gt;假设要编写一个类似”字典”的对象, 它里面可以容纳其它对象, 只不过开发者要直接通过属性来存取其中的数据. 这个类的设计思路是: 有开发者来添加属性定义, 并将其声明为 @dynamic, 类则会自动处理相关属性值的存放与获取操作. 听起来不错吧? &amp;gt;_&amp;lt;&lt;/p&gt;
&lt;p&gt;类的接口定义如下:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AutoDictionary&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *string;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *number;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; *date;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; opaqueObject;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个类将装载各种不同类型的对象, 看起来与平时普通的类没啥区别啊? 我们看类的实现.&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;AutoDictionary.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;objc/runtime.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AutoDictionary&lt;/span&gt; ()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSMutableDictionary&lt;/span&gt; *backingStore;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AutoDictionary&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@dynamic&lt;/span&gt; string, number, date, opaqueObject;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)init &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; = [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; init]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _backingStore = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableDictionary&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;声明各属性为 &lt;em&gt;@dynamic&lt;/em&gt;, 编译器不会自动为property生成存取方法和实例变量. 由我们自行实现.&lt;/p&gt;
&lt;p&gt;关键在于&lt;code&gt;resolveInstanceMethod:&lt;/code&gt;方法的实现.&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)resolveInstanceMethod:(SEL)sel &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *selString = &lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(sel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([selString hasPrefix:&lt;span class=&quot;string&quot;&gt;@&quot;set&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        class_addMethod(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, sel, (IMP)autoDictionarySetter, &lt;span class=&quot;string&quot;&gt;&quot;v@:@&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        class_addMethod(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, sel, (IMP)autoDictionaryGetter, &lt;span class=&quot;string&quot;&gt;&quot;@@:&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; resolveInstanceMethod:sel];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;众所周知, 任何的点语法访问都会转化为名为&lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;, &lt;code&gt;set&amp;lt;Name&amp;gt;&lt;/code&gt;形式的存取方法来访问, 以上使用&lt;code&gt;class_addMethod&lt;/code&gt;在运行时添加存取方法, 所有属性将共用这一对getter与setter. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;class_addMethod&lt;/code&gt;函数第一和第二参数分别为类对象自身与选择子, 第三个参数为待添加方法实现对应的函数指针, 第四为待添加方法的”&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtTypeEncodings.html#//apple_ref/doc/uid/TP40008048-CH100-SW1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;类型编码&lt;/a&gt;“, 指定该添加方法的参数与返回值等.&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;class_addMethod&lt;/code&gt;动态添加方法后, 所添加的方法将一直在运行时存在, 下一次的调用该方法将不再进行动态方法解析.&lt;/p&gt;
&lt;p&gt;下面实现getter与setter:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// getter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; autoDictionaryGetter(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, SEL _cmd) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Get the backing store from the object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AutoDictionary *typedSelf = (AutoDictionary*)&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSMutableDictionary&lt;/span&gt; *backingStore = typedSelf.backingStore;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// The key is simply the selector name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *key = &lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(_cmd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Return the value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [backingStore objectForKey:key];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//setter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; autoDictionarySetter(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, SEL _cmd, &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Get the backing store from the object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AutoDictionary *typedSelf = (AutoDictionary*)&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSMutableDictionary&lt;/span&gt; *backingStore = typedSelf.backingStore;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/** The selector will be for example, &quot;setOpaqueObject:&quot;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *  We need to remove the &quot;set&quot;, &quot;:&quot; and lowercase the first&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *  letter of the remainder.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *selectorString = &lt;span class=&quot;built_in&quot;&gt;NSStringFromSelector&lt;/span&gt;(_cmd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSMutableString&lt;/span&gt; *key = [selectorString mutableCopy];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Remove the `:&#39; at the end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [key deleteCharactersInRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(key.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Remove the `set&#39; prefix&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [key deleteCharactersInRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Lowercase the first character&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *lowercaseFirstChar = [[key substringToIndex:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] lowercaseString];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [key replaceCharactersInRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) withString:lowercaseFirstChar];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [backingStore setObject:value forKey:key];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [backingStore removeObjectForKey:key];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用它们的方式很简单:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AutoDictionary *dict = [[AutoDictionary alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dict.date = [&lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; dateWithTimeIntervalSince1970:&lt;span class=&quot;number&quot;&gt;475372800&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;dict.date = %@&quot;&lt;/span&gt;, dict.date);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Output: dict.date = 1985-01-24 00:00:00 +0000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而且它还是&lt;strong&gt;KVC兼容&lt;/strong&gt;的哦! &lt;em&gt;(关于KVC与KVO, 可参考我&lt;a href=&quot;(http://partyspy.cn/2016/06/30/KVC%20&amp;amp;%20KVO%20%E5%B0%8F%E7%BB%93/&quot;&gt;之前的博客&lt;/a&gt;))&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[dict setValue:&lt;span class=&quot;string&quot;&gt;@&quot;I&#39;m a string!&quot;&lt;/span&gt; forKey:&lt;span class=&quot;string&quot;&gt;@&quot;string&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;dict.string = %@&quot;&lt;/span&gt;, dict.string);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Output: dict.string = I&#39;m a string!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;备援接受者&quot;&gt;&lt;a href=&quot;#备援接受者&quot; class=&quot;headerlink&quot; title=&quot;备援接受者&quot;&gt;&lt;/a&gt;备援接受者&lt;/h3&gt;&lt;p&gt;在完整的消息转发来临之前, 当前接受者还有第二次机会处理未知的选择子. 处理方法如下:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)forwardingTargetForSelector:(SEL)aSelector&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行时系统通过该方法询问能否把无法识别的选择子转给其它对象处理呢?&lt;br&gt;例如, 在一个对象内部, 可能还有其它一系列对象, 该对象可经由此方法将能够处理某选择子的相关内部对象返回. 这样看来, 就好像是该对象亲自处理了这些消息似的. 这样可以模拟出&lt;strong&gt;“多重继承”&lt;/strong&gt;的特性.&lt;/p&gt;
&lt;h3 id=&quot;完整的消息转发&quot;&gt;&lt;a href=&quot;#完整的消息转发&quot; class=&quot;headerlink&quot; title=&quot;完整的消息转发&quot;&gt;&lt;/a&gt;完整的消息转发&lt;/h3&gt;&lt;p&gt;终于来到了这一步. 首先创建&lt;code&gt;NSInvocation&lt;/code&gt;对象, 把尚未处理的有关该消息的全部细节封装起来, 包括选择子, 目标(target), 参数与返回值等. 在触发&lt;code&gt;NSInvocation&lt;/code&gt;对象时, 消息派发系统(message-dispatch system)将亲自出马, 把消息指派给目标对象.&lt;/p&gt;
&lt;p&gt;消息转发方法:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)forwardInvocation:(&lt;span class=&quot;built_in&quot;&gt;NSInvocation&lt;/span&gt; *)invocation&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在此方法里需要做的事情是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;决定消息发送的目标对象;&lt;/li&gt;
&lt;li&gt;随参数一起发送该消息.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;消息通过&lt;code&gt;invokeWithTarget:&lt;/code&gt;发送.&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)forwardInvocation:(&lt;span class=&quot;built_in&quot;&gt;NSInvocation&lt;/span&gt; *)anInvocation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([someOtherObject respondsToSelector:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [anInvocation selector]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [anInvocation invokeWithTarget:someOtherObject];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; forwardInvocation:anInvocation];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上代码中最后调用超类处理该消息, 沿着继承体系向上, 每个类都有机会处理该请求, 直至NSObject, 它的该方法默认实现为抛出&lt;code&gt;doesNotRecognizeSelector:&lt;/code&gt;异常.&lt;/p&gt;
&lt;p&gt;相对于简单的消息发送语句 &lt;code&gt;[receiver message];&lt;/code&gt;, &lt;code&gt;forwardInvocation:&lt;/code&gt;提供了一种更加灵活的机制, 避免了冗余的方法重写或者破坏类继承体系, 而提供了一种类似”&lt;em&gt;消息中转派发&lt;/em&gt;“的机制. 另外NSInvocation也提供了对待转发消息的修改机制, 甚至不做转发, 等等, 也提供了更多的操作性. &lt;/p&gt;
&lt;p&gt;初探Objective-C Runtime System, 这篇博文对Runtime消息传递, 转发机制等做了一些探讨. 关于更多的Runtime研究与实践, 将在日后的博客中更新.&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtForwarding.html#//apple_ref/doc/uid/TP40008048-CH105-SW1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Objective-C Runtime Programming Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.effectiveobjectivec.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Effective Objective-C 2.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Objective-C 编译器与运行时系统支撑着OC程序的运行。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>KVC &amp; KVO 小结</title>
    <link href="http://yoursite.com/2016/06/30/KVC%20&%20KVO%20%E5%B0%8F%E7%BB%93/"/>
    <id>http://yoursite.com/2016/06/30/KVC & KVO 小结/</id>
    <published>2016-06-30T08:56:09.000Z</published>
    <updated>2016-06-30T11:29:45.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;KVC&quot;&gt;&lt;a href=&quot;#KVC&quot; class=&quot;headerlink&quot; title=&quot;KVC&quot;&gt;&lt;/a&gt;KVC&lt;/h2&gt;&lt;h3 id=&quot;什么是KVC&quot;&gt;&lt;a href=&quot;#什么是KVC&quot; class=&quot;headerlink&quot; title=&quot;什么是KVC?&quot;&gt;&lt;/a&gt;什么是KVC?&lt;/h3&gt;&lt;p&gt;KVC(Key-value coding)是一种通过字符串去识别并间接存取(access)对象属性的机制, 该机制区别于直接通过存取方法(accessor)和实例变量去访问. 本质上, KVC定义了实现存取方法的模式与方法签名.&lt;/p&gt;
&lt;p&gt;KVC可用来访问三种不同类型的对象值: attribute, 一对一关系, 一对多关系.&lt;/p&gt;
&lt;h3 id=&quot;KVC方法&quot;&gt;&lt;a href=&quot;#KVC方法&quot; class=&quot;headerlink&quot; title=&quot;KVC方法&quot;&gt;&lt;/a&gt;KVC方法&lt;/h3&gt;&lt;h4 id=&quot;读&quot;&gt;&lt;a href=&quot;#读&quot; class=&quot;headerlink&quot; title=&quot;读:&quot;&gt;&lt;/a&gt;读:&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-valueForKey:&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-valueForKeyPath:&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-dicitionaryWithValuesForKeys:&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对应key的值不存在时将发送消息&lt;code&gt;valueForUndefinedKey:&lt;/code&gt;给自己, 该方法默认实现抛出&lt;code&gt;NSUndefinedKeyException&lt;/code&gt;. 可自行重写该方法.&lt;/p&gt;
&lt;h4 id=&quot;写&quot;&gt;&lt;a href=&quot;#写&quot; class=&quot;headerlink&quot; title=&quot;写:&quot;&gt;&lt;/a&gt;写:&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-setValue:ForKey:&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-setValue:ForKeyPath:&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-setValuesForKeysWithDicitonary:&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;若指定的key不存在调用者将被发送消息&lt;code&gt;setValue:forUndefinedKey:&lt;/code&gt;, 同样该方法默认抛出&lt;code&gt;NSUndefinedKeyException&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;若把nil赋给一个非对象类型的属性, 调用者被发送&lt;code&gt;setNilValueForKey:&lt;/code&gt;消息, 该方法默认抛出&lt;code&gt;NSInvalidArgumentException.&lt;/code&gt; 自己可重写该方法来实现正确的赋值. 例如:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// MyModel.h&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyModel&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;assign&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; hidden;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;assign&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;readonly&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// MyModel.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyModel&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setNilValueForKey:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)key &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([key isEqualToString:&lt;span class=&quot;string&quot;&gt;@&quot;num&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; setValue:@&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; forKey:&lt;span class=&quot;string&quot;&gt;@&quot;num&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([key isEqualToString:&lt;span class=&quot;string&quot;&gt;@&quot;hidden&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; setValue:@NO forKey:&lt;span class=&quot;string&quot;&gt;@&quot;hidden&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; setNilValueForKey:key];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;KVC与点语法访问方法&quot;&gt;&lt;a href=&quot;#KVC与点语法访问方法&quot; class=&quot;headerlink&quot; title=&quot;KVC与点语法访问方法&quot;&gt;&lt;/a&gt;KVC与点语法访问方法&lt;/h3&gt;&lt;p&gt;两种方法可同时并存使用.&lt;br&gt;如下例所示, 定义了一个类:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyClass&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *stringProperty;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; integerProperty;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; MyClass *linkedInstance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用KVC访问属性如下:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MyClass *myInstance = [[MyClass alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *string = [myInstance valueForKey:&lt;span class=&quot;string&quot;&gt;@&quot;stringProperty&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[myInstance setValue:@&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; forKey:&lt;span class=&quot;string&quot;&gt;@&quot;integerProperty&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以下两种方式结果是一样的:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MyClass *anotherInstance = [[MyClass alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myInstance.linkedInstance = anotherInstance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myInstance.linkedInstance.integerProperty = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MyClass *anotherInstance = [[MyClass alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myInstance.linkedInstance = anotherInstance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[myInstance setValue:@&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; forKeyPath:&lt;span class=&quot;string&quot;&gt;@&quot;linkedInstance.integerProperty&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;KVC兼容-Key-value-coding-compliant&quot;&gt;&lt;a href=&quot;#KVC兼容-Key-value-coding-compliant&quot; class=&quot;headerlink&quot; title=&quot;KVC兼容(Key-value coding compliant)&quot;&gt;&lt;/a&gt;KVC兼容(Key-value coding compliant)&lt;/h3&gt;&lt;p&gt;KVC兼容是对于类中某个特定属性(property)来说的, 所谓KVC兼容实际指的是某个属性可通过&lt;code&gt;-valueForKey:&lt;/code&gt;, &lt;code&gt;-setValue:forKey:&lt;/code&gt;&lt;strong&gt;等&lt;/strong&gt;KVC方法去访问属性. &lt;/p&gt;
&lt;p&gt;在Objective-C 2.0里的@property实质上也就是一对setter, getter访问器方法加一个实例变量. &lt;/p&gt;
&lt;h5 id=&quot;先看个例子&quot;&gt;&lt;a href=&quot;#先看个例子&quot; class=&quot;headerlink&quot; title=&quot;先看个例子:&quot;&gt;&lt;/a&gt;先看个例子:&lt;/h5&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//MyModel.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt; *_myObj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt; *)myObj &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!_myObj) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _myObj = [[&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; _myObj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setMyObj:(&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt; *)obj &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _myObj = obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调用时,&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;MyModel myObj: %@&quot;&lt;/span&gt;, model.myObj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt; *obj = [[&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;auto obj: %@&quot;&lt;/span&gt;, obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[model setValue:obj forKey:&lt;span class=&quot;string&quot;&gt;@&quot;myObj&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;MyModel myObj: %@&quot;&lt;/span&gt;, model.myObj);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印出来:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-06&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-30&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;26.991&lt;/span&gt; TestKVC[&lt;span class=&quot;number&quot;&gt;19217&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20399799&lt;/span&gt;] MyModel myObj: &amp;lt;&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0x7fea43424fe0&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-06&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-30&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;26.991&lt;/span&gt; TestKVC[&lt;span class=&quot;number&quot;&gt;19217&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20399799&lt;/span&gt;] auto obj: &amp;lt;&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0x7fea45813d90&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-06&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-30&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;26.991&lt;/span&gt; TestKVC[&lt;span class=&quot;number&quot;&gt;19217&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20399799&lt;/span&gt;] MyModel myObj: &amp;lt;&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0x7fea45813d90&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上, 对于myObj这个属性来说, 它就是KVC兼容的.&lt;/p&gt;
&lt;p&gt;其实, 没有实例变量也是可以的.&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// MyModel.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt; *)noSuchObj &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;getter method&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setNoSuchObj:(&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt; *)obj &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;setter method&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调用时,&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//invoke getter accessor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[model valueForKey:&lt;span class=&quot;string&quot;&gt;@&quot;noSuchObj&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//invoke setter accessor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[model setValue:&lt;span class=&quot;string&quot;&gt;@&quot;nothing&quot;&lt;/span&gt; forKey:&lt;span class=&quot;string&quot;&gt;@&quot;noSuchObj&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//same as the above one for dot syntax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;model.noSuchObj = &lt;span class=&quot;string&quot;&gt;@&quot;nothing&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印出来是, &lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-06&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-30&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;26.992&lt;/span&gt; TestKVC[&lt;span class=&quot;number&quot;&gt;19217&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20399799&lt;/span&gt;] getter method&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-06&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-30&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;31.439&lt;/span&gt; TestKVC[&lt;span class=&quot;number&quot;&gt;19217&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20399799&lt;/span&gt;] setter method&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-06&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-30&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;38.882&lt;/span&gt; TestKVC[&lt;span class=&quot;number&quot;&gt;19217&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20399799&lt;/span&gt;] setter method&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实际上&lt;code&gt;-valueForKey:&lt;/code&gt;, &lt;code&gt;-setValue:forKey:&lt;/code&gt;之类的KVC方法在运行时会按照一定的顺序去调用遵循特定方法签名的访问器方法或直接访问实例变量.&lt;/p&gt;
&lt;p&gt;例如&lt;code&gt;-setValue:forKey:&lt;/code&gt;这个方法的实现大概是这样的:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看调用对象所属类是否实现了&lt;code&gt;-set&amp;lt;Key&amp;gt;:&lt;/code&gt;这样的访问器方法, 有则调用;&lt;/li&gt;
&lt;li&gt;若没有, 调用者类方法&lt;code&gt;-accessInstanceVariablesDirectly&lt;/code&gt;放回YES, 然后依次搜索看是否存在命名方式为 &lt;code&gt;_&amp;lt;key&amp;gt;&lt;/code&gt;, &lt;code&gt;_is&amp;lt;Key&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt;, &lt;code&gt;is&amp;lt;Key&amp;gt;&lt;/code&gt;这样的实例变量, 有则直接赋值于它.&lt;/li&gt;
&lt;li&gt;若遵循这种命名形式的访问器方法和实例变量都无, 则调用&lt;code&gt;setValue:forUndefinedKey:&lt;/code&gt;方法.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;一对多关系属性的KVC-集合代理&quot;&gt;&lt;a href=&quot;#一对多关系属性的KVC-集合代理&quot; class=&quot;headerlink&quot; title=&quot;一对多关系属性的KVC, 集合代理&quot;&gt;&lt;/a&gt;一对多关系属性的KVC, 集合代理&lt;/h3&gt;&lt;p&gt;先看个例子:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//MyModel.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; int32_t &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; primes[] = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;101&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;233&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;383&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;103&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;239&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;389&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;241&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;397&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;109&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;251&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;401&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;113&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;257&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;409&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;127&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;263&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;419&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;131&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;269&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;421&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;137&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;271&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;431&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;139&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;277&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;433&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;149&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;281&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;439&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;151&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;283&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;443&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;37&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;157&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;293&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;449&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;163&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;307&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;457&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;43&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;167&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;311&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;461&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;47&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;173&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;313&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;463&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;53&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;179&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;317&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;467&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;59&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;181&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;331&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;479&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;61&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;191&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;337&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;487&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;67&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;193&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;347&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;491&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;71&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;197&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;349&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;499&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;73&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;199&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;353&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;503&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;79&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;211&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;359&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;509&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;83&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;223&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;367&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;521&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;89&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;227&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;373&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;523&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;97&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;229&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;379&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;541&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;547&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;701&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;877&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1049&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;557&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;709&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;881&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1051&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;563&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;719&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;883&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1061&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;569&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;727&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;887&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1063&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;571&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;733&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;907&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1069&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;577&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;739&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;911&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1087&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;587&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;743&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;919&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1091&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;593&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;751&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;929&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1093&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;599&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;757&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;937&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1097&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;601&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;761&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;941&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1103&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;607&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;769&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;947&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1109&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;613&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;773&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;953&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1117&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;617&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;787&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;967&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1123&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;619&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;797&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;971&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1129&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;631&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;809&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;977&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1151&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;641&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;811&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;983&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1153&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;643&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;821&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;991&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1163&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;647&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;823&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;997&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1171&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;653&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;827&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1009&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1181&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;659&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;829&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1013&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;661&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;839&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1019&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1193&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;673&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;853&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1021&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1201&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;677&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;857&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1031&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1213&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;683&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;859&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1033&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1217&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;691&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;863&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1039&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1223&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1229&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt;)countOfPrimes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(primes) / &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(*primes));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)objectInPrimesAtIndex:(&lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt;)idx;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSParameterAssert&lt;/span&gt;(idx &amp;lt; &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(primes) / &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(*primes));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; @(primes[idx]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在上述MyModel类的实现文件里, 加上了一个装有一堆质数的静态数组, 以及定义了两个方法. &lt;/p&gt;
&lt;p&gt;瞧这两方法是否看起来类似于NSArray的原始(primitive)方法 &lt;code&gt;-count&lt;/code&gt;和&lt;code&gt;-objectAtInIndex:&lt;/code&gt;呢?&lt;/p&gt;
&lt;p&gt;使用时:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//invoke collection accessors&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; proxy = [model valueForKey:&lt;span class=&quot;string&quot;&gt;@&quot;primes&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;MyModel last prime: %@&quot;&lt;/span&gt;, [proxy lastObject]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里我们是把&lt;code&gt;primes&lt;/code&gt;当做一个NSArray来使用的. 注意上面例子中并没有声明有&lt;code&gt;primes&lt;/code&gt;这么一个属性的, 也无这么一个实例变量对象. 我们可以通过&lt;code&gt;valueForKey:&lt;/code&gt;去获取, 那么它一定是实现KVC了.&lt;/p&gt;
&lt;p&gt;实际上, 这里&lt;code&gt;valueForKey:&lt;/code&gt;方法内部大概是这样的:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;依次查找&lt;code&gt;get&amp;lt;Key&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt;, &lt;code&gt;is&amp;lt;Key&amp;gt;&lt;/code&gt;形式的访问器方法.&lt;/li&gt;
&lt;li&gt;找不到则查找匹配模式&lt;code&gt;countOf&amp;lt;Key&amp;gt;&lt;/code&gt;和&lt;code&gt;objectIn&amp;lt;Key&amp;gt;AtIndex:&lt;/code&gt;(或&lt;code&gt;objectsAtIndexes:&lt;/code&gt;)的方法. 若找到, 则返回一个集合代理对象(&lt;strong&gt;collection proxy object&lt;/strong&gt;), 该对象可使用所有NSArray的方法.&lt;/li&gt;
&lt;li&gt;找不到则查找&lt;code&gt;countOf&amp;lt;Key&amp;gt;&lt;/code&gt;, &lt;code&gt;enumeratorOf&amp;lt;Key&amp;gt;&lt;/code&gt;, &lt;code&gt;memberOf&amp;lt;Key&amp;gt;:&lt;/code&gt;, 同理如上, 不过对应的是&lt;strong&gt;NSSet&lt;/strong&gt;, 无序集合.&lt;/li&gt;
&lt;li&gt;再找不到则查找匹配命名&lt;code&gt;_&amp;lt;key&amp;gt;&lt;/code&gt;, &lt;code&gt;_is&amp;lt;Key&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt;, or &lt;code&gt;is&amp;lt;Key&amp;gt;&lt;/code&gt;的实例变量.&lt;/li&gt;
&lt;li&gt;否则调用&lt;code&gt;valueForUndefinedKey:&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上例中的proxy就是一个集合代理对象, 调用&lt;code&gt;[proxy class]&lt;/code&gt;得知它是一个&lt;strong&gt;NSKeyValueArray&lt;/strong&gt;类型.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;集合代理对象里, 包括了有序与无序, 可变与不可变的不同情况, 其分别也对应于实现不同的方法以KVC兼容. 但它们机理都是类似的.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;集合运算符&quot;&gt;&lt;a href=&quot;#集合运算符&quot; class=&quot;headerlink&quot; title=&quot;集合运算符&quot;&gt;&lt;/a&gt;集合运算符&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/KeyValueCoding/art/keypath.jpg&quot; alt=&quot;Operator key path format&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单运算符:@avg, @count, @max, @min. @sum.&lt;/li&gt;
&lt;li&gt;对象运算符:@distinctUnionOfObjects, @unionOfObjects.&lt;/li&gt;
&lt;li&gt;数组,集合运算符:@distinctUnionOfArrays, @unionOfArrays, @distinctUnionOfSets.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上例中,&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; proxy = [model valueForKey:&lt;span class=&quot;string&quot;&gt;@&quot;primes&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;MyModel primes count: %lu&quot;&lt;/span&gt;, [proxy count]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;MyModel primes count: %@&quot;&lt;/span&gt;, [model valueForKeyPath:&lt;span class=&quot;string&quot;&gt;@&quot;primes.@count&quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印的两个count结果都是一样的, 都是&lt;code&gt;201&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;KVO&quot;&gt;&lt;a href=&quot;#KVO&quot; class=&quot;headerlink&quot; title=&quot;KVO&quot;&gt;&lt;/a&gt;KVO&lt;/h2&gt;&lt;p&gt;接收一个属性的KVO通知, 需三个条件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;被观察的属性是&lt;strong&gt;KVO兼容&lt;/strong&gt;的.(KVO Compliant)&lt;/li&gt;
&lt;li&gt;注册观察者:发送消息&lt;code&gt;addObserver:forKeyPath:options:context:&lt;/code&gt;到被观察对象.&lt;/li&gt;
&lt;li&gt;观察着对象需实现&lt;code&gt;observeValueForKeyPath:ofObject:change:context:&lt;/code&gt;方法.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而属性为KVO兼容的, 亦需满足三个条件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它是KVC兼容的;&lt;/li&gt;
&lt;li&gt;所在类会为该属性发送KVO通知;&lt;/li&gt;
&lt;li&gt;依赖键需注册.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看个例子. 以下两方法都在都一观察者类中, self即observer.&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 观察者类中注册键值观察&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)registerAsObserver &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.model = [[MyModel alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.model addObserver:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            forKeyPath:&lt;span class=&quot;string&quot;&gt;@&quot;num&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               options:&lt;span class=&quot;built_in&quot;&gt;NSKeyValueObservingOptionNew&lt;/span&gt; | &lt;span class=&quot;built_in&quot;&gt;NSKeyValueObservingOptionOld&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               context:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;NSEC_PER_SEC&lt;/span&gt;)), dispatch_get_main_queue(), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.model setValue:&lt;span class=&quot;string&quot;&gt;@&quot;999&quot;&lt;/span&gt; forKey:&lt;span class=&quot;string&quot;&gt;@&quot;num&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 实现处理KVO通知方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)observeValueForKeyPath:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)keyPath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      ofObject:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)object&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        change:(&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *,&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;gt; *)change&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       context:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)context &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (object == &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.model) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([keyPath isEqualToString:&lt;span class=&quot;string&quot;&gt;@&quot;num&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;old num:%@&quot;&lt;/span&gt;, change[&lt;span class=&quot;built_in&quot;&gt;NSKeyValueChangeOldKey&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;new num:%@&quot;&lt;/span&gt;, change[&lt;span class=&quot;built_in&quot;&gt;NSKeyValueChangeNewKey&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里打印被观察属性值变化的新旧值.&lt;/p&gt;
&lt;h3 id=&quot;KVO的自动与手动通知&quot;&gt;&lt;a href=&quot;#KVO的自动与手动通知&quot; class=&quot;headerlink&quot; title=&quot;KVO的自动与手动通知&quot;&gt;&lt;/a&gt;KVO的自动与手动通知&lt;/h3&gt;&lt;p&gt;以上例子为自动通知. 实际上苹果系统framework中类的属性都支持发送自动通知.&lt;/p&gt;
&lt;p&gt;而手动通知可实现精细的控制通知发送. 手动通知通过重写NSObject的&lt;code&gt;automaticallyNotifiesObserversForKey:&lt;/code&gt;方法判断是否自动.&lt;/p&gt;
&lt;p&gt;用法如下例所示:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//MyModel.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)automaticallyNotifiesObserversForKey:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)key &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([key isEqualToString:&lt;span class=&quot;string&quot;&gt;@&quot;num&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; automaticallyNotifiesObserversForKey:key];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;NO&lt;/code&gt;表示键为&lt;code&gt;num&lt;/code&gt;的属性为手动KVO.&lt;br&gt;重写其setter方法:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//MyModel.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setNum:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)num &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (num != _num) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; willChangeValueForKey:&lt;span class=&quot;string&quot;&gt;@&quot;num&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _num = num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; didChangeValueForKey:&lt;span class=&quot;string&quot;&gt;@&quot;num&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料:&quot;&gt;&lt;/a&gt;参考资料:&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/KeyValueObserving/KeyValueObserving.html#//apple_ref/doc/uid/10000177-BCICJDHA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Key-Value Observing Programming Guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/KeyValueCoding/Articles/KeyValueCoding.html#//apple_ref/doc/uid/10000107-SW1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Key-Value Coding Programming Guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://objccn.io/issue-7-3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;KVC 和 KVO objc中国&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;KVC&quot;&gt;&lt;a href=&quot;#KVC&quot; class=&quot;headerlink&quot; title=&quot;KVC&quot;&gt;&lt;/a&gt;KVC&lt;/h2&gt;&lt;h3 id=&quot;什么是KVC&quot;&gt;&lt;a href=&quot;#什么是KVC&quot; class=&quot;headerlink&quot; title=&quot;什么是KVC?&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TableView性能与reusableCell</title>
    <link href="http://yoursite.com/2016/06/14/tableView%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2016/06/14/tableView性能优化/</id>
    <published>2016-06-14T11:56:25.000Z</published>
    <updated>2016-06-16T09:29:39.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;这是笔者在工作项目中遇到的一个需求。本篇文章将延续上一篇&lt;a href=&quot;http://partyspy.cn/2016/06/14/TableViewCell%E7%9A%84%E6%94%B6%E7%BC%A9%E5%B1%95%E5%BC%80%E4%B8%8E%E5%8A%A8%E6%80%81%E9%AB%98%E5%BA%A6/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《TableViewCell的收缩展开与动态高度》&lt;/a&gt;继续探讨有关TableView性能方面的问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;a href=&quot;http://partyspy.cn/2016/06/14/TableViewCell%E7%9A%84%E6%94%B6%E7%BC%A9%E5%B1%95%E5%BC%80%E4%B8%8E%E5%8A%A8%E6%80%81%E9%AB%98%E5%BA%A6/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;上一篇&lt;/a&gt;中主要涉及到了&lt;code&gt;-beginUpdate&lt;/code&gt;触发&lt;code&gt;-tableView:heightForRowAtIndexPath:&lt;/code&gt;回调去改变Cell高度，和通过改变Cell中内容的&lt;strong&gt;约束优先级&lt;/strong&gt;去解决约束冲突问题，以及StackView在TableViewCell里的运用。&lt;/p&gt;
&lt;h3 id=&quot;TableView性能&quot;&gt;&lt;a href=&quot;#TableView性能&quot; class=&quot;headerlink&quot; title=&quot;TableView性能&quot;&gt;&lt;/a&gt;TableView性能&lt;/h3&gt;&lt;p&gt;table view性能瓶颈主要集中在&lt;code&gt;-tableView:cellForRowAtIndexPath&lt;/code&gt; 和&lt;code&gt;-tableView:heightForRowAtIndexPath:&lt;/code&gt;这两个高频调用的回调函数。&lt;a href=&quot;http://www.jianshu.com/p/202b5cfcc6f4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;上一篇&lt;/a&gt;文章中将Cell的stackView内容插入和高度计算都移到了&lt;code&gt;-tableView:didSelectRowAtIndexPath:&lt;/code&gt;里，且加了判断标识使得每个cell只计算一次。这也涉及到了性能优化的实践。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不要在&lt;code&gt;-tableView:heightForRowAtIndexPath:&lt;/code&gt;里使用tableView的 &lt;code&gt;-cellForRowAtIndexPath:&lt;/code&gt;方法获取cell.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;然而这里还是存在一个问题。&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&quot;reuseIdentifier&quot;&gt;&lt;a href=&quot;#reuseIdentifier&quot; class=&quot;headerlink&quot; title=&quot;reuseIdentifier&quot;&gt;&lt;/a&gt;reuseIdentifier&lt;/h4&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt; *)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView cellForRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *cellID = &lt;span class=&quot;string&quot;&gt;@&quot;MyCellID&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MyCell *cell = [tableView dequeueReusableCellWithIdentifier:cellID forIndexPath:indexPath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [cell loadSumLineByDict:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.dataList[indexPath.row]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cell;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;关于&lt;strong&gt;reuseIdentifier&lt;/strong&gt;: 我们知道，每一个tableView维护了一个可重用cell的缓存池，当cell视图移出屏幕时，tableView并没有将该cell对象丢弃而是放入缓存池，而当新的cell移入屏幕时调配给其使用。但是请&lt;strong&gt;注意&lt;/strong&gt;拥有相同的 &lt;em&gt;resueIdentifier&lt;/em&gt; 的cell并不代表是同一个对象cell，实际上&lt;code&gt;-dequeueReusableCellWithIdentifier:&lt;/code&gt;依然会生成至少屏幕一次能容纳下的不同Cell对象个数。而&lt;code&gt;reuseIdentifier&lt;/code&gt;更多的是用来界定一种Cell的&lt;em&gt;类型&lt;/em&gt;（或形式）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本例中Cell的类型都为&lt;code&gt;MyCell&lt;/code&gt;没错，实际上涉及到动态插入内容到Cell，每个Cell实际上拥有的高度与内容都不一样了。如果它们依然使用同一个&lt;code&gt;reuseIdentifier&lt;/code&gt;的话，将会出现不同Cell内容重复到一块的现象。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;比如，该tableView有15个Cell而屏幕一次能容纳10个Cell，滑动时第1个cell移出屏幕，第11个Cell将移入屏幕，从而重用了第1个Cell的对象。而每一行的展开数据是否已加载的标识是由IndexPath去匹配的，所以即便第11个Cell（即第1个Cell对象）已载入过展开内容，select第11行时依然会加载第11行应有的展开内容。因此再度滑动回第1行时，展开内容已经包括了自己原本以及第11行的信息，第11行亦然。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;所以每一行Cell我们都应该使之为不同对象。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;但是要放弃使用cell可重用机制吗？当然不是，那样性能将难以承受。我们使所有cell都拥有不同的&lt;code&gt;reuseIdentifier&lt;/code&gt;来重用。&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// MyTableViewController.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// _dataList为展示数据模型，可确定表格行数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; registerCellsByCount:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.dataList.count];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//批量注册可重用cell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)registerCellsByCount:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)count &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *cellReuseID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;count; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cellReuseID = [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;MyCell%d&quot;&lt;/span&gt;, i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.tableView registerNib:[&lt;span class=&quot;built_in&quot;&gt;UINib&lt;/span&gt; nibWithNibName:&lt;span class=&quot;string&quot;&gt;@&quot;MyCell&quot;&lt;/span&gt; bundle:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             forCellReuseIdentifier:cellReuseID];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.cellReuseIdArray addObject:cellReuseID];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由此我们注册了&lt;code&gt;reuseIdentifier&lt;/code&gt;为&lt;em&gt;MyCell1&lt;/em&gt;, &lt;em&gt;MyCell2&lt;/em&gt;, …, &lt;em&gt;MyCelln&lt;/em&gt;的一批可重用Cell，而每个Cell的重用仅面向自己对应的row的Cell。&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt; *)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView cellForRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MyCell *cell = [tableView dequeueReusableCellWithIdentifier:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.cellReuseIdArray[indexPath.row] forIndexPath:indexPath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [cell loadSumLineByDict:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.dataList[indexPath.row]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cell;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在页面Cell不是特别多且每行Cell之间不能相互复用的情况下，提供一种思路给大家借鉴。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这是笔者在工作项目中遇到的一个需求。本篇文章将延续上一篇&lt;a href=&quot;http://partyspy.cn/2016/06/14/TableViewCell%E7%9A%84%E6%94%B6%E7%BC%A9%E5%B1%95%E5%BC%80%E4%B8%8E%E5%8A%A8%E6%80%81%E9%AB%98%E5%BA%A6/&quot;&gt;《TableViewCell的收缩展开与动态高度》&lt;/a&gt;继续探讨有关TableView性能方面的问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="tableView性能优化 iOS开发" scheme="http://yoursite.com/tags/tableView%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96-iOS%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>TableViewCell的收缩展开与动态高度</title>
    <link href="http://yoursite.com/2016/06/14/TableViewCell%E7%9A%84%E6%94%B6%E7%BC%A9%E5%B1%95%E5%BC%80%E4%B8%8E%E5%8A%A8%E6%80%81%E9%AB%98%E5%BA%A6/"/>
    <id>http://yoursite.com/2016/06/14/TableViewCell的收缩展开与动态高度/</id>
    <published>2016-06-14T10:03:35.000Z</published>
    <updated>2016-06-16T09:28:51.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;关于TableViewCell的收缩展开与动态高度的方法网上有很多，但本文主要运用AutoLayout和更改&lt;strong&gt;Constraint priority&lt;/strong&gt;的方式来实现，另外包括了StackView动态插入在TableViewCell里的运用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Cell收缩与展开&quot;&gt;&lt;a href=&quot;#Cell收缩与展开&quot; class=&quot;headerlink&quot; title=&quot;Cell收缩与展开&quot;&gt;&lt;/a&gt;Cell收缩与展开&lt;/h3&gt;&lt;p&gt;这是在实际项目中遇到一个需求。展示一个表格，每一行为一个项目的汇总行，点击表格每一行时展开一系列细节小行，在此点击收起该行，仅展示汇总行。如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2252015-78fd57325df4b9e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Paste_Image.png&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2252015-e0f764e66b54fbe1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Paste_Image.png&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2252015-325f154eac08d5c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Paste_Image.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们用TableView去实现该需求。在点击cell时展开该cell, 再次点击时收起。不同的cell展开高度依赖于该cell所展示的内容。每一个行用StackView去实现。这里将用到嵌套的StackView和StackView动态插入。另外我用了设置约束优先级去解决Cell内容显示错位的问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们先实现Cell的展开与收缩。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;定义一个Dictionary来存储每个Cell的展开或收缩状态。&lt;strong&gt;key&lt;/strong&gt;为&lt;em&gt;IndexPath&lt;/em&gt;。- &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@property (nonatomic, copy) NSMutableDictionary *expandedFlagOfRowDict;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;每次选择cell后toggle展开状态。实现TableView delegate方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView didSelectRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [tableView deselectRowAtIndexPath:indexPath animated:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    BMMerchantCell *cell = [tableView cellForRowAtIndexPath:indexPath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//toggle the expanded flag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.expandedFlagOfRowDict[indexPath] = [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:![&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.expandedFlagOfRowDict[indexPath] boolValue]];;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [tableView beginUpdates];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [tableView endUpdates];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;调用&lt;em&gt;-beginUpdates&lt;/em&gt; 后 tableView delegate会回调 &lt;em&gt;heightForRowAtIndexPath&lt;/em&gt;方法。&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;-beginUpdates&lt;/em&gt; 和 &lt;em&gt;-endUpdates&lt;/em&gt; 必须组合使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView heightForRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//cell expanded height&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.expandedFlagOfRowDict[indexPath] boolValue]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.heightForRowDict[indexPath] floatValue];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//cell collapsed height&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;44&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;由此实现了Cell的展开与收缩。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Cell动态高度&quot;&gt;&lt;a href=&quot;#Cell动态高度&quot; class=&quot;headerlink&quot; title=&quot;Cell动态高度&quot;&gt;&lt;/a&gt;Cell动态高度&lt;/h3&gt;&lt;p&gt;上面代码我们留意到有 &lt;em&gt;self.heightForRowDict&lt;/em&gt; 这玩意儿，每个row展开的高度是不一样的。它与&lt;em&gt;self.expandedFlagOfRowDict&lt;/em&gt; 类似，我们定义一个字典来存储每一个Cell的高度。该字典Key为IndexPath，value为高度。&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSMutableDictionary&lt;/span&gt; *heightForRowDict;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;而每个Cell的高度由Cell对象本身确定。我们用IB去定义Cell原型。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2252015-a37d6770d385ab00.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Paste_Image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Cell收缩状态时，仅展示汇总一行（即&lt;em&gt;Sum Stack View&lt;/em&gt;)。点击展开时，显示细节行，细节行数不定。细节行嵌套到&lt;em&gt;Detail Stack View&lt;/em&gt;这个大的StackView中。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;细节行：（称之为DetailItemStackView)&lt;/em&gt;&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2252015-439f15ae2ab7faa1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Paste_Image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;可见，在SumStackView高度已定，DetailStackView设定top与bottom约束，DetailItemStackView高度已定情况下，Cell的高度就由细节行的插入的多少决定了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note：&lt;/strong&gt;与Label、Button等控件一样，Stack View 也有自己的Intrinsic Size，在未设定约束时亦能确定自己的大小。其依赖于内部subView的大小和space。在subView约束未定时其本身大小同依据于本身Intrinsic Size确定。这是一个嵌套递归的过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下来就计算TableView Cell的高度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在收缩状态时，其高度等于&lt;em&gt;SumStackView&lt;/em&gt;的高度。&lt;/li&gt;
&lt;li&gt;在展开状态时，其高度等于&lt;em&gt;SumStackView&lt;/em&gt;和&lt;em&gt;DetailStackView&lt;/em&gt;高度加两者距离加&lt;em&gt;DetailStackView&lt;/em&gt;与&lt;em&gt;Cell.Bottom&lt;/em&gt;距离。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;考虑到解耦与&lt;strong&gt;性能优化&lt;/strong&gt;问题，Cell的高度与内容将不在Controller层计算。&lt;em&gt;-tableView:heightForRowAtIndexPath:&lt;/em&gt; 中仅负责读取高度值。&lt;br&gt;自定义Cell对象：&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//MyCell.h&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyCell&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;UITableViewCell&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIStackView&lt;/span&gt; *detailStackView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIStackView&lt;/span&gt; *sumStackView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UILabel&lt;/span&gt; *cityLabel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UILabel&lt;/span&gt; *sumLabel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UILabel&lt;/span&gt; *vLabel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;assign&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; rowHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;先把cell的高度都设为定值，运行看看收缩与展开效果，假定&lt;em&gt;rowHeight=100&lt;/em&gt;;&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2252015-4cf937942f0a1241.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Paste_Image.png&quot;&gt;&lt;br&gt;运行时可见编译器报了一大堆约束冲突警告，界面Cell内容显示位置偏离，而IB界面设计并无约束警告。经过本人探究后发现，实际上是与运行时的 &lt;em&gt;-tableView:heightForRowAtIndexPath:&lt;/em&gt; 代理方法返回的高度相冲突。该高度H !== sumStackView.height + &lt;em&gt;space&lt;/em&gt; + detailStackView.height + &lt;em&gt;space&lt;/em&gt;; 故而冲突。而将其中一个&lt;em&gt;space&lt;/em&gt;的约束优先级调低至750，冲突解决。界面显示正常。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2252015-af158e6b724ff3bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Paste_Image.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note：&lt;/strong&gt;由此得知，&lt;em&gt;-tableView:heightForRowAtIndexPath:&lt;/em&gt; 返回高度值的约束优先级实际上是介于&lt;strong&gt;750&lt;/strong&gt;和&lt;strong&gt;1000&lt;/strong&gt;之间的&lt;strong&gt;（750&amp;lt;p&amp;lt;1000）&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;Cell与StackView&quot;&gt;&lt;a href=&quot;#Cell与StackView&quot; class=&quot;headerlink&quot; title=&quot;Cell与StackView&quot;&gt;&lt;/a&gt;Cell与StackView&lt;/h5&gt;&lt;p&gt;至此Cell展开后显示的是一个空的StackView，现在我们往Cell类里添加两个方法内容。&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//MyCell.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Cell collapsed content&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)loadSumLineByDict:(&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)dataDict &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.cityLabel.text = dataDict[&lt;span class=&quot;string&quot;&gt;@&quot;cityDes&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.sumLabel.text = [(&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *)dataDict[&lt;span class=&quot;string&quot;&gt;@&quot;sum&quot;&lt;/span&gt;] stringValue];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Cell expanded content&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)loadDetailLinesByDict:(&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)dataDict &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *detailList = (&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *)dataDict[&lt;span class=&quot;string&quot;&gt;@&quot;detail&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//Insert sub stackViews. Performance consuming process.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [detailList enumerateObjectsUsingBlock:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;  _Nonnull obj, &lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt; idx, &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; * _Nonnull stop) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *mccTag = [(&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)obj objectForKey:&lt;span class=&quot;string&quot;&gt;@&quot;mccTag&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *num = [(&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)obj objectForKey:&lt;span class=&quot;string&quot;&gt;@&quot;num&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DetailItemStackView *itemSV = [[[&lt;span class=&quot;built_in&quot;&gt;NSBundle&lt;/span&gt; mainBundle] loadNibNamed:&lt;span class=&quot;string&quot;&gt;@&quot;DetailItemStackView&quot;&lt;/span&gt; owner:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; options:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;] lastObject];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        itemSV.mccTagLabel.text = mccTag;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        itemSV.numLabel.text = [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, num];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.detailStackView addArrangedSubview:itemSV];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.detailStackView layoutIfNeeded];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; layoutIfNeeded];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//Calculate the cell&#39;s height based on AutoLayout&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGSize&lt;/span&gt; size = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contentView systemLayoutSizeFittingSize:&lt;span class=&quot;built_in&quot;&gt;UILayoutFittingCompressedSize&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.rowHeight = size.height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参数&lt;code&gt;dataDict&lt;/code&gt;为数据模型；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-loadSumLineByDict:&lt;/code&gt;加载汇总行，即Cell收缩状态时的展示行；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-loadDetailLinesByDict:&lt;/code&gt;加载细节行，即Cell展开时展示的内容；该方法设计遍历以及创建StackView对象，为耗性能的步骤。这个我们让它有生之年只Run一次就够了。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-layoutIfNeeded&lt;/code&gt;在stackView们都插入完毕后，更新布局。实现Runtime时的Autolayout；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-systemLayoutSizeFittingSize:&lt;/code&gt;方法返回满足约束的大小，用以获取Cell增加内容后的高度值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由此获取cell的datasource方法如下：&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt; *)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView cellForRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *cellID = &lt;span class=&quot;string&quot;&gt;@&quot;MyCellID&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt; *cell = [tableView dequeueReusableCellWithIdentifier:cellID forIndexPath:indexPath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//load the collpased content&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [cell loadSumLineByDict:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.dataList[indexPath.row]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cell;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-cellForRow:&lt;/code&gt;方法为高频调用，因此此处尽量进行轻量级的数据加载。此处仅加载Cell收缩状态的内容，而展开的内容则在select时加载。didSelectRow方法就变成了这样：&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView didSelectRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [tableView deselectRowAtIndexPath:indexPath animated:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MyCell *cell = [tableView cellForRowAtIndexPath:indexPath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//Check if the row had been loaded. If not,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (![&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.loadedFlagOfRowDict[indexPath] boolValue]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//Load detail lines and calculate the height for row&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [cell loadDetailLinesByDict:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.dataList[indexPath.row]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//store the height&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.heightForRowDict[indexPath] = @(cell.rowHeight + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//set the loaded flag to true and it will end up true ever since&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.loadedFlagOfRowDict[indexPath] = @YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//toggle the expanded flag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.expandedFlagOfRowDict[indexPath] = [&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithBool:![&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.expandedFlagOfRowDict[indexPath] boolValue]];;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [tableView beginUpdates];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [tableView endUpdates];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;此处加入了一个字典属性来存储是否加载的标志位&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@property (nonatomic, copy) NSMutableDictionary *loadedFlagOfRowDict;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;依此判断使得该Cell展开内容有生之年仅加载一次。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加载完内容后计算高度，并存储至&lt;code&gt;_heightForRowDict&lt;/code&gt;中，在&lt;code&gt;-tableView:heightForRowAtIndexPath:&lt;/code&gt;中读取并展示实际高度。由此实现了&lt;em&gt;TableViewCell&lt;/em&gt; 的收缩展开与动态高度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;小结：&quot;&gt;&lt;a href=&quot;#小结：&quot; class=&quot;headerlink&quot; title=&quot;小结：&quot;&gt;&lt;/a&gt;小结：&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-beginUpdates&lt;/code&gt; &amp;amp; &lt;code&gt;-endUpdates&lt;/code&gt; 实现select Cell时收缩与展开。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-tableView:heightForRowAtIndexPath:&lt;/code&gt; 的约束优先级。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-tableView:cellForRowAtIndexPath:&lt;/code&gt;与&lt;code&gt;-tableView:heightForRowAtIndexPath:&lt;/code&gt;为高频调用方法，高耗能的操作尽量转移到其它方法中，本例子中如Cell高度计算，内容加载等。本例中cellForRow方法仅加载cell最基本的内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://0.0.0.0:4000/2016/06/14/tableView%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下一篇&lt;/a&gt;讲延续本篇内容，探讨TableView的性能优化方面的问题。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;关于TableViewCell的收缩展开与动态高度的方法网上有很多，但本文主要运用AutoLayout和更改&lt;strong&gt;Constraint priority&lt;/strong&gt;的方式来实现，另外包括了StackView动态插入在TableViewCell里的运用。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/06/08/hello-world/"/>
    <id>http://yoursite.com/2016/06/08/hello-world/</id>
    <published>2016-06-08T03:45:30.000Z</published>
    <updated>2016-06-08T03:47:46.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
